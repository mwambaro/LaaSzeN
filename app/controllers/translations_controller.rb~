
#require File.join(::Rails.root, 'app', 'helpers', 'application_helper.rb')

class TranslationsController < ApplicationController
  before_action :set_all_time
  
  def init
      nullobj
      @tr_session ||= LaaszenModel::DataModel.new(::Rails.root)
  end
  
  def language     
      @payload = {
          to_translate: params[:lang][:lengthened],
          translated: params[:lang][:shortened],
          active_meta: @metadata
      }
      
      @tr_return = TrPayload.create(@payload)
      if
          @notice = "Data handled successfully. You can continue!"
      else
          @notice = "Fatal error!! Restart, please!"
      end
      
      render :init   
  end
  
  def tr_data
  end
  
  def translate      
      if @langs.nil?
          @notice += 'Languages Not Set. Restart!'
          render :init
      end
      
      d_data = {
          to_translate: params[:payloadata][:to_translate],
          translated: params[:payloadata][:translated],
          meta: @payload.nil? ? nil : @payload[:meta]
      }
      
      @payload = d_data
      @languages ||= Hash.new
      @languages[:from] = 'English'
      @languages[:into] = @langs.nil? ? nil : @langs[:lengthened]
      
      render :tr_data
  end
  
  private
    # Use callbacks to share common setup or constraints between actions.
    def nullobj
        @obj_tr_session = nil
        @tr_session = nil
        @payload = nil
        @langs = nil
        @languages = nil
        @notice = nil
        @metadata = nil
        @tr_return = nil
        @data = nil
    end
    
    def set_all_time
        @notice ||= ""
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def lang_params
      params.require(:lang).permit(:lengthened, :shortened)
    end
    
    def payloadata_params
      params.require(:payloadata).permit(:to_translate, :translated)
    end
end
