class LaaszenTaskController < ApplicationController
    before_action :init, only: [:start, :translate, :edit]
    
    def start
    end
    
    def edit
    end
    
    def restart
        @obj_model = LaaszenModel::DataModel.new(::Rails.root)
        
        MetaInfo.all.each{|m| m.destroy}
        
        TrPayload.all.each{|m| m.destroy}
        TrPayload.create
        @tr_payload = TrPayload.first
        
        @notice = "We Are Restarting Off With Success!"
        
        render :start
    end
    
    def translate                                              
        begin            
            re = @tr_payload.update_attributes(payload_params)
            if re.nil?
                @notice = "Failed To Handle Translation Data! Sorry!!"
            else
                @tr_payload = TrPayload.first
                if @cache.get_object(@e_s_key, :into_language).nil?
                    @cache.set_object(
                        @e_s_key, :into_language, @tr_payload.into_language
                    )
                end
                @notice = "Translation Data Successfully received. You can go on."
            end
        rescue => err
            @obj_model.send(:debug_write, "#{err.message}") unless @obj_model.nil?
            @notice = "Failed To Handle Translation Data!: #{err.message}"    
        end
        
        render :start
    end
    
    def edit_translation
        e_payload = @cache.get_object(@e_s_key, :e_payload)
        if e_payload.nil?
            @notice = "Failed To Handle Edited Translation Data! Sorry!!"
        else
            if(
                e_payload[:payload].empty? || 
                !@obj_model.send(
                    :valid_string?, e_payload[:payload][:to_translate]
                )
            )
                @notice = "Failed To Validate Edited Translation Data! Sorry!!"
            else
                e_payload[:payload].merge!(e_payload_params)
                @cache.set_object(@e_s_key, :e_payload, e_payload)
            end
        end
        
        render :edit
    end
    
    private
    
    def init
        @obj_model ||= LaaszenModel::DataModel.new(::Rails.root)
        @tr_payload ||= TrPayload.new
        @notice ||= "We are starting off with success!"
        @cache ||= Worldcitizen::Application.config.action_controller.cache_store
        
        @e_s_key ||= @cache.start_session
        @db_table_name ||= 'Lang'
        @into_lang
        
        count = TrPayload.count
        if count > 0
            @tr_payload = TrPayload.first
        else
            TrPayload.create
            @tr_payload = TrPayload.first
        end
    end
    
    # Never trust parameters from the scary internet, only allow the white list through.
    def payload_params
      params.require(:payload).permit(:into_language, :translated)
    end
    
    def e_payload_params
      params.require(:e_payload).permit(:translated)
    end
end
